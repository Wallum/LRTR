//Originally from RP-1 v1.1.1 
//https://github.com/KSP-RO/RP-0
//Used under Creative Commons License

//==================================================================================//
//  MASS SPECTROMETRY																//
//==================================================================================//

EXPERIMENT_DEFINITION
{
    id = RP0massSpec1
    title = Mass Spectrometry
    baseValue = 6
    scienceCap = 6
    dataScale = 2
    requireAtmosphere = False
    situationMask = 57
    biomeMask = 25

    RESULTS
    {
        default = You use your part to ionize chemical species and sort the ions based on their mass-to-charge ratio.
    }
}


//==========================================//
//	General Science Module					//
//==========================================//

@PART[RO-IonMassSpectrometer|RO-MIMS|RO-QuadropoleMassSpectrometer|sensorAtmosphere|bluedog_Sputnik3_Core]:FOR[LRTR]:NEEDS[LRTRScience]
{	
	MODULE
	{
		name = DMModuleScienceAnimateGeneric
		experimentID = RP0massSpec1
		
		animationName = deploy
		experimentAnimation = true
		experimentWaitForAnimation = true
		keepDeployedMode = 0
		animSpeed = 2
		showEndEvent = false
		showStartEvent = false
		showToggleEvent = false
		startEventGUIName = Open Sensors
		endEventGUIName = Close Sensors
		toggleEventGUIName = Toggle Sensors
		evaDistance = 1.85
		
		collectActionName = Retrieve Spectrometry Data
		resetActionName = Discard Spectrometry Data
		reviewActionName = Review Stored Data
		dataIsCollectable = true
		experimentActionName = Record Mass Spectrometry
		rerunnable = true
		hideUIwhenUnavailable = true
		useActionGroups = true
		useStaging = false
		xmitDataScalar = 1.0
		usageReqMaskExternal = 4
		
		deployingMessage = The sensors are adjusting to gather the thermal data...
		waitForAnimationTime = -1
		resourceExperiment = ElectricCharge
		resourceExpCost = 0
		experimentsLimit = 1
		totalScienceLevel = 1.0
		asteroidReports = true
	}
}


//	LEVEL 1
//	Ion Mass Spectrometer
//	Based on the earliest Bennett RF Mass Spectrometers that flew on the Aerobee
//	https://ntrs.nasa.gov/archive/nasa/casi.ntrs.nasa.gov/20100039433.pdf
//	Part: Bluedog Ion Trap
//====================================================================================

@PART[RO-IonMassSpectrometer|bluedog_Sputnik3_Core]:AFTER[LRTR]:NEEDS[LRTRScience]
{	
	@MODULE[DMModuleScienceAnimateGeneric]
	{
		@totalScienceLevel = 0.25
		@experimentAnimation = false
		@experimentWaitForAnimation = false
	}
}


//	LEVEL 2
//	Magnetic Ion Mass Spectrometer (MIMS)
//	Based on the MIMS flown on many craft including Explorer 31 and AE-C.
//  https://ntrs.nasa.gov/archive/nasa/casi.ntrs.nasa.gov/20100039433.pdf
//	Part: Coatl DUST-X
//====================================================================================

@PART[RO-MIMS]:AFTER[LRTR]:NEEDS[LRTRScience]
{	
	@MODULE[DMModuleScienceAnimateGeneric]
	{
		@totalScienceLevel = 0.5
		@experimentAnimation = false
		@experimentWaitForAnimation = false
	}
}


//	LEVEL 3
//	Quadropole Mass Spectrometer
//	Based on the Mass Spectrometers on OVI-15, Viking and Pioneer Venus Orbiter
//  https://ntrs.nasa.gov/archive/nasa/casi.ntrs.nasa.gov/20100039433.pdf
//	Part: Bluedog Mass Spectrometer
//====================================================================================

@PART[RO-QuadropoleMassSpectrometer]:AFTER[LRTR]:NEEDS[LRTRScience]
{	
	@MODULE[DMModuleScienceAnimateGeneric]
	{
		@totalScienceLevel = 0.75
		@experimentAnimation = false
		@experimentWaitForAnimation = false
	}
}


//	LEVEL 4
//	Gas Chromatograph-Mass Spectrometer (GC/MS)
//	Based on the parts flown on the Viking Lander and Cassini Missions.
//	https://airandspace.si.edu/collection-objects/planetary-probe-viking-gas-chromatograph-mass-spectrometer
//	Part: Stock Atmosphere Analyzer
//====================================================================================

@PART[sensorAtmosphere]:AFTER[LRTR]:NEEDS[LRTRScience]
{	
	@MODULE[DMModuleScienceAnimateGeneric]
	{
		@experimentAnimation = false
		@experimentWaitForAnimation = false
	}
}