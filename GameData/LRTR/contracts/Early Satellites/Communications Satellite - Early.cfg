//Originally from RP-1 v1.1.1 
//https://github.com/KSP-RO/RP-0
//Used under Creative Commons License

CONTRACT_TYPE
{
	name = EarlyComSat
	title = Commercial Communications Satellite (Early)
	group = EarlySatellites


	description = Now that we have tested out the Communications Satellite Technology, there are many uses we have for these Satellites. We have a customer that is requesting a new satellite. Launch a new communications Satellite into the specified orbit.&br;&br;<b><color=red>NOTE: The satellite will be destroyed upon completion of the contract. This simulates transfer of the payload back to the customer.</color></b><b><color=white>Removal Condition: Completion of a Commercial Communications Satellite contract</color></b>&br;&br;<b>Number of Contracts Completed: $EarlyComSat_Count</b>
	genericDescription = Put a satellite into the requested orbit.

	synopsis = Launch a Communications Satellite for a customer.

	completedMessage = Success! The communications satellite was launched into the proper orbit. Your customer is very happy.

	sortKey = 499

	cancellable = true
	declinable = true
	autoAccept = false
	minExpiry = 0
	maxExpiry = 0
	maxCompletions = 0
	maxSimultaneous = 1
	deadline = 180  // 6 Months

	targetBody = HomeWorld()


	// ************ REWARDS ************
	prestige = Trivial       // 1.0x
	advanceFunds = (5000 + (300 * 2)) * @LRTR:globalHardContractMultiplier
	rewardScience = 0
	rewardReputation = 5
	rewardFunds = (13000.0 + (Pow((@EarlyComSat/Orbit/minApA), 0.5) * 2) + (300 * 5)) * @LRTR:globalHardContractMultiplier
	failureReputation = 2
	failureFunds = @advanceFunds * 0.5

	// ************ REQUIREMENTS ************

	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = ComTestSat
		minCount = 3
		title = Complete @contractType Contract at least 3 times
	}
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = RepeatComSats
		title = Have not Completed a @contractType Contract
		invertRequirement = true
	}
    REQUIREMENT
    {
        name = PartUnlocked
        type = PartUnlocked
        part = HighGainAntenna5
    }
	
	BEHAVIOUR
	{
		name = IncrementTheCount
		type = Expression
		
		CONTRACT_COMPLETED_SUCCESS
        {
            EarlyComSat_Count = $EarlyComSat_Count + 1
        }
	}

	// ************ PARAMETERS ************
	
	PARAMETER
	{
		name = EarlyComSat
		type = VesselParameterGroup
		define = EarlyComSatellite
		dissassociateVesselsOnContractCompletion = true
		title = Communications Satellite (Early)
		
		PARAMETER
		{
			name = NewVessel
			type = NewVessel
			title = Launch a New Vessel
			hideChildren = true
		}
		PARAMETER 
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
			title = Uncrewed
			hideChildren = true
		}
		PARAMETER
		{
			name = HasSolarPower
			title = Can Generate Solar Power
			type = PartValidation
			hideChildren = true
			partModule = ModuleDeployableSolarPanel
			minCount = 1
		}
		PARAMETER
		{
			name = HasComSatPayload
			type = PartValidation
			part = HighGainAntenna5
			title = Have an HG-5 High Gain Antenna
		}
		PARAMETER
		{
			name = Orbit
			type = Orbit
			minInclination = Round(Random(30, 50))
			minPeA = Round(Random(700000, 1000000))
			minApA = Round(Random(3000000, 10000000))
			maxApA = Round(Random(10000000, 30000000))
			disableOnStateChange = true
			title = Achieve Orbit within the parameters
			
			PARAMETER
			{
				name = Duration
				type = Duration

				duration = 2m

				preWaitText = Check for Stable Orbit
				waitingText = Checking for Stable Orbit
				completionText = Stable Orbit: Confirmed
			}
		}
	}
  BEHAVIOUR
  {
    name = TransferVessel
    type = DestroyVessel
    onState = CONTRACT_SUCCESS
    vessel = EarlyComSatellite
  }
  BEHAVIOUR
  {
	name = VesselDestroyed
	type = DialogBox
	DIALOG_BOX
	{
	  title = Vessel Ownership Transferred
	  condition = CONTRACT_SUCCESS
	  position = CENTER
	  width = 0.5
	  TEXT
	  {
		text = The contract has been completed successfully and the satellite has been transferred back to the customer.
	  }
	}
  }
}
