//stolen from !RealismOverhaul 12.7.2
@PHYSICSGLOBALS:FOR[zLRTR]:NEEDS[!RealismOverhaul]
{
	//%kerbalCrewMass = 0.1
	
	// AeroFX
	@aeroFXDensityScalar1 = 0.00004
	@aeroFXDensityExponent1 = 0.7
	@aeroFXDensityScalar2 = 0.0036
	@aeroFXDensityExponent2 = 2
	@aeroFXStartThermalFX = 2.5
	@aeroFXFullThermalFX = 3.5
	@aeroFXVelocityExponent = 4.0
	
	// Gauges
	@temperatureGaugeThreshold = 0.8
	@temperatureGaugeHighlightThreshold = 0.8
	
	// CONSTANTS
	@spaceTemperature = 4
	@solarLuminosityAtHome = 1360
	@solarInsolationAtHome = 0.15
	@standardSpecificHeatCapacity = 800
	@internalHeatProductionFactor = 0.025
	
	// CONVECTION
	@convectionFactorSplashed = 8000
	
	// Convection areas
	@fullConvectionAreaMin = 0.25
	@fullToCrossSectionLerpStart = 0.8
	@fullToCrossSectionLerpEnd = 1.5
	
	// Newtonian Convection
	@newtonianTemperatureFactor = 1
	@newtonianConvectionFactorBase = 4.0 // approx real number here.
	@newtonianConvectionFactorTotal = 1.5873 // was 1.0, but 1.0.5 has a .63x factor internally.
	@newtonianDensityExponent = 0.5
	@newtonianVelocityExponent = 1.0
	@convectionFactorSplashed = 5000
	
	// Newtonian-To-Hypersonic transition
	@newtonianMachTempLerpStartMach = 2.0
	@newtonianMachTempLerpEndMach = 4.0
	@newtonianMachTempLerpExponent = 3
	
	// Hypersonic Convection
	@machConvectionDensityExponent = 0.5
	@machConvectionVelocityExponent = 3.0
	@machConvectionFactor = 1.05 // lowered from 1.72 for KSP 1.2.2
	@machTemperatureScalar = 7.5 // ~6000 at 7.3km/sec
	@machTemperatureVelocityExponent = 0.75
	
	// Turbulent convection (total guesses)
	@turbulentConvectionStart = 100
	@turbulentConvectionEnd = 400
	@turbulentConvectionMult = 25
	
	// CONDUCTION
	@conductionFactor = 5
	@skinSkinConductionFactor = 0.06
	@skinInternalConductionFactor = 0.2 // lowered from 0.25 for KSP 1.2.2
	@shieldedConductionFactor = 0.01
	
	// RADIATION
	@partEmissivityExponent = 4
	@radiationFactor = 1
	
	// ANALYTIC
	@analyticLerpRateSkin = 0.002
	@analyticLerpRateInternal = 0.0005
	
	// BUOYANCY
	@buoyancyScalar = 1.0
	@buoyancyWaterAngularDragScalar = 0.002
	@buoyancyMinCrashMult = 0.05
	
	// GENERAL
	@stack_PriUsesSurf = True	
}

//core resizing
@PART[*]:HAS[#rescaleFactor[*],~lrtrExclude[true]]:FOR[zLRTR]:NEEDS[!SMURFF|!RealismOverhaul]
{
	@rescaleFactor *= 1.6
}
@PART[*]:HAS[~rescaleFactor[],~lrtrExclude[true]]:FOR[zLRTR]:NEEDS[!SMURFF|!RealismOverhaul]
{
	rescaleFactor = 2.0
}
@PART[*]:HAS[~scale[],~lrtrExclude[true]]:FOR[zLRTR]:NEEDS[!SMURFF|!RealismOverhaul]
{
	scale = 1.0
}

//
//engines
//
//fix 4 engine clusters, otherwise clustered engines get over boosted (see below)
@PART[Size3EngineCluster]:HAS[~lrtrExclude[true]]:BEFORE[zLRTR]:NEEDS[!SMURFF|!RealismOverhaul]
{
	@MODULE,*:HAS[#name[ModuleEngines*]]
	{
	    @maxThrust /= 4
	}
}
//fix 2 engine clusters
@PART[Size2LFB]:HAS[~lrtrExclude[true]]:BEFORE[zLRTR]:NEEDS[!SMURFF|!RealismOverhaul]
{
	@MODULE,*:HAS[#name[ModuleEngines*]]
	{
	    @maxThrust /= 2
	}
}
//rather than just boosting thrust linearly, this creates a curve to make powerful engines even more powerful
//this helps create closer to real world values for stock engines
//equation:  (maxThrust / (maxThrust + X) + 1) * maxThrust * 2.56
//gives 1-2 multiplier as maxThrust increases with X determaining the steepness of curve
@PART[*]:HAS[@MODULE[ModuleEngines*],~lrtrExclude[true]]:FOR[zLRTR]:NEEDS[!SMURFF|!RealismOverhaul]
{  
	@MODULE,*:HAS[#name[ModuleEngines*]]
	{
	    thrustN = #$maxThrust$
	    thrustD = #$maxThrust$
	    @thrustD += #$lrtr_thrustCurve$ //600 gives something approximating real world values (with some exceptions) for stock engines
	    @thrustN /= #$thrustD$
	    @thrustN += 1
	    @maxThrust *= #$thrustN$
		@maxThrust *= 2.56
		!thrustN = DEL
		!thrustD = DEL
		!lrtr_thrustCurve = DEL
	}
}
//fix 4 engine clusters
@PART[Size3EngineCluster]:HAS[~lrtrExclude[true]]:AFTER[zLRTR]:NEEDS[!SMURFF|!RealismOverhaul]
{
	@MODULE,*:HAS[#name[ModuleEngines*]]
	{
	    @maxThrust *= 4
	}
}
//fix 2 engine clusters
@PART[Size2LFB]:HAS[~lrtrExclude[true]]:AFTER[zLRTR]:NEEDS[!SMURFF|!RealismOverhaul]
{
	@MODULE,*:HAS[#name[ModuleEngines*]]
	{
	    @maxThrust *= 2
	}
}
//solid
//again atempted to get near real world values matching existing motors.
@PART[*]:HAS[@RESOURCE[SolidFuel],~lrtrExclude[true]]:FOR[zLRTR]:NEEDS[!SMURFF|!RealismOverhaul]
{
	@mass *= 4.08
	@MODULE,*:HAS[#name[ModuleEngines*]]
	{
		@maxThrust *= 2.0 // already a factor of 2.56 from all-engines, above.
		@atmosphereCurve
		{
			@key,0 ^= :0 ::
			@key,0 *= 1.4
			@key,0 ^= :^:0 :
			@key,1 ^= :1 ::
			@key,1 *= 1.4
			@key,1 ^= :^:1 :			
		}
	}
}
//jets
@PART[*]:HAS[@MODULE[ModuleEngine*]:HAS[@PROPELLANT[IntakeAir]],~lrtrExclude[true]]:FOR[zLRTR]:NEEDS[!SMURFF|!RealismOverhaul]
{
	@MODULE[ModuleEngine*]:HAS[@PROPELLANT[IntakeAir]]
	{
		@maxThrust *= 0.5
		@atmosphereCurve
		{
			@key ^= :^0 ::
			@key ^= : 0 0::
			@key *= 0.75
			@key ^= :^:0 :
			@key ^= :$: 0 0:
		}
	}
}

//tanks and resources
@PART[*]:FOR[zLRTR]:NEEDS[!SMURFF|!RealismOverhaul]
{
	@RESOURCE[Oxidizer]
	{
		@amount *= 3.4
		@maxAmount *= 3.4
	}
	@RESOURCE[LiquidFuel]
	{
		@amount *= 3.4
		@maxAmount *= 3.4
	}
	@RESOURCE[MonoPropellant]
	{
		@amount *= 1.25 // higher dry fraction
		// Note: this means that volume utilization will only be 1/3 that of a regular
		// LFO tank....
		@maxAmount *= 1.25
	}
	@RESOURCE[XenonGas]
	{
		@amount *= 4
		@maxAmount *= 4
	}
	@RESOURCE[Ore]
	{
		@amount *= 3.4
		@maxAmount *= 3.4 // assume same density as LF/OX
	}
	@RESOURCE[IntakeAir]
	{
		@amount *= 4
		@maxAmount *= 4
	}
	@RESOURCE[ElectricCharge]
	{
		@amount *= 4
		@maxAmount *= 4
	}
	@RESOURCE[SolidFuel] //in line with real world fuel loads
	{
		@amount *= 5.78
		@maxAmount *= 5.78
	}
}
// decrease resource costs
@RESOURCE_DEFINITION[Oxidizer|LiquidFuel|SolidFuel|MonoPropellant|XenonGas]:FOR[zLRTR]:NEEDS[!SMURFF|!RealismOverhaul]
{
	@unitCost *= 0.1
}
// Fuel tanks, lower dry mass
@PART[*]:HAS[@RESOURCE[LiquidFuel],!MODULE[ModuleCommand],!MODULE[ModuleEngines*],~lrtrExclude[true]]:FOR[zLRTR]:NEEDS[!SMURFF|!RealismOverhaul]
{
	@mass *= 0.8
}

//parts and aerodynamics
// Drag cube changes from rescale
@PART[*]:HAS[@DRAG_CUBE,~lrtrExclude[true]]:FOR[zLRTR]:NEEDS[!SMURFF|!RealismOverhaul]
{
	@DRAG_CUBE
	{
		@cube,*[1,,] *= 1.6
		@cube,*[3,,] *= 1.6
		@cube,*[4,,] *= 1.6
		@cube,*[6,,] *= 1.6
		@cube,*[7,,] *= 1.6
		@cube,*[9,,] *= 1.6
		@cube,*[10,,] *= 1.6
		@cube,*[12,,] *= 1.6
		@cube,*[13,,] *= 1.6
		@cube,*[15,,] *= 1.6
		@cube,*[16,,] *= 1.6
		@cube,*[18,,] *= 1.6
		@cube,*[19,,] *= 1.6
		@cube,*[20,,] *= 1.6
		@cube,*[21,,] *= 1.6
		@cube,*[22,,] *= 1.6
		@cube,*[23,,] *= 1.6
		@cube,*[24,,] *= 1.6
	}
}
// Heat shields
@PART[*]:HAS[@MODULE[ModuleAblator],~lrtrExclude[true]]:FOR[zLRTR]:NEEDS[!SMURFF|!RealismOverhaul]
{
	@MODULE[ModuleAblator]
	{
		@lossConst *= 0.5
	}
}
// Parachutes, special case
@PART[*]:HAS[@MODULE[ModuleDragModifier],@MODULE[ModuleParachute],~lrtrExclude[true]]:FOR[zLRTR]:NEEDS[!SMURFF|!RealismOverhaul]
{
	@MODULE,*:HAS[#name[ModuleDragModifier]]
	{
		@dragModifier *= 0.390625 // 1/1.6^2
	}
}
//fairings
@PART[*]:HAS[@MODULE[ModuleProceduralFairing],~lrtrExclude[true]]:FOR[zLRTR]:NEEDS[!SMURFF|!RealismOverhaul]
{
	%rescaleFactor = 1.0
	//increase autotruss size.  autotruss has a 'position' variable
	//potential bug if another MODEL with position is added
	@MODEL,*:HAS[#position[*]]
	{
		&scale = 1.0, 1.0, 1.0
		@scale[*] *= 1.6
	}
	//adds scale variable when needed to base
	//again potential bug if another MODEL without position is added
    @MODEL,*:HAS[~position[*],~scale[*]]
    {
		%scale = 1.0, 1.0, 1.0
    }      	
    //increase base size width/length, keep height same for asthetics
    @MODEL,*:HAS[~position[*]]
    {
    	scale0 = #$scale[0]$
	   	scale2 = #$scale[2]$
    	@scale0 *= 1.6
    	@scale2 *= 1.6
    	@scale = #$scale0$,$scale[1]$, $scale2$
    	!scale0 = DEL
    	!scale2 = DEL
    }
		
	//stack position height changes just a bit when the model scales asymetrically.
	%position_height = #$/MODEL:HAS[#position[*]]/position[1]$
	@position_height /= 1.6
	
	@node_stack_interstage01a[1] *= 1.6
	@node_stack_interstage01a[1] -= #$position_height$
	@node_stack_interstage01b[1] *= 1.6
	@node_stack_interstage01b[1] -= #$position_height$

	@node_stack_interstage02a[1] *= 1.6
	@node_stack_interstage02a[1] -= #$position_height$
	@node_stack_interstage02b[1] *= 1.6
	@node_stack_interstage02b[1] -= #$position_height$

	@node_stack_interstage03a[1] *= 1.6
	@node_stack_interstage03a[1] -= #$position_height$
	@node_stack_interstage03b[1] *= 1.6
	@node_stack_interstage03b[1] -= #$position_height$

	@node_stack_interstage04a[1] *= 1.6
	@node_stack_interstage04a[1] -= #$position_height$
	@node_stack_interstage04b[1] *= 1.6
	@node_stack_interstage04b[1] -= #$position_height$

	@node_stack_interstage05a[1] *= 1.6
	@node_stack_interstage05a[1] -= #$position_height$
	@node_stack_interstage05b[1] *= 1.6
	@node_stack_interstage05b[1] -= #$position_height$

	@node_stack_interstage06a[1] *= 1.6
	@node_stack_interstage06a[1] -= #$position_height$
	@node_stack_interstage06b[1] *= 1.6
	@node_stack_interstage06b[1] -= #$position_height$
	!position_height = DEL
	
	@node_stack_top[0] *= 1.6
	@node_stack_top[2] *= 1.6
	
	@node_stack_bottom[0] *= 1.6
	@node_stack_bottom[2] *= 1.6

	@MODULE[ModuleProceduralFairing]
	{
		@baseRadius *= 1.6
		@maxRadius *= 1.6
		@snapThreshold *= 1.6
		@xSectionHeightMax *= 2		
		@UnitAreaMass = 0.0075
		@UnitAreaCost = 6
	}
}

// Rescale wings
@PART[*]:HAS[@MODULE[*]:HAS[#deflectionLiftCoeff[*]],~lrtrExclude[true]]:FOR[zLRTR]:NEEDS[!SMURFF|!RealismOverhaul]
{
	@mass *= 2.56
	@MODULE,*:HAS[#deflectionLiftCoeff[*]]
	{
		@deflectionLiftCoeff *= 2.56
	}
}
// Catch Mk2 fuselages that have the wing modules...
@PART[*]:HAS[@MODULE[*]:HAS[#useInternalDragModel[False]],~lrtrExclude[true]]:FOR[zLRTR]:NEEDS[!SMURFF|!RealismOverhaul]
{
	@mass *= 0.390625 // reset mass
}
// scale up intakes
@PART[*]:HAS[@MODULE[ModuleResourceIntake],~lrtrExclude[true]]:FOR[zLRTR]
{
	@mass *= 2.56
	@MODULE[ModuleResourceIntake]
	{
		@area *= 2.56
	}
}

//variant stack nodes for engines, strutural tubes, engine plates, etc.
@PART[*]:HAS[@MODULE[ModulePartVariants],~lrtrExclude[true]]:FOR[zLRTR]:NEEDS[!SMURFF|!RealismOverhaul]
{
	@MODULE[ModulePartVariants]
	{
	   @VARIANT,*
 	   {
 	   		@NODES:HAS[#node_stack_bottom[*]] {
		    	stack_bottom0 = #$node_stack_bottom[0]$
			    stack_bottom1 = #$node_stack_bottom[1]$
    			stack_bottom2 = #$node_stack_bottom[2]$
		    	@stack_bottom0 *= 1.6
	    		@stack_bottom1 *= 1.6
		    	@stack_bottom2 *= 1.6
	    		@node_stack_bottom = #$stack_bottom0$,$stack_bottom1$,$stack_bottom2$,$node_stack_bottom[3]$,$node_stack_bottom[4]$,$node_stack_bottom[5]$,$node_stack_bottom[6]$
	    		!stack_bottom0 = DEL
			    !stack_bottom1 = DEL
    			!stack_bottom2 = DEL
	    	}
 	   		@NODES:HAS[#node_stack_top[*]] {
		    	stack_top0 = #$node_stack_top[0]$
			    stack_top1 = #$node_stack_top[1]$
    			stack_top2 = #$node_stack_top[2]$
		    	@stack_top0 *= 1.6
	    		@stack_top1 *= 1.6
		    	@stack_top2 *= 1.6
	    		@node_stack_top= #$stack_top0$,$stack_top1$,$stack_top2$,$node_stack_top[3]$,$node_stack_top[4]$,$node_stack_top[5]$,$node_stack_top[6]$
	    		!stack_top0 = DEL
			    !stack_top1 = DEL
    			!stack_top2 = DEL
	    	}
 	   		@NODES:HAS[#node_stack_bottom1[*]] {
		    	stack_bottom10 = #$node_stack_bottom1[0]$
			    stack_bottom11 = #$node_stack_bottom1[1]$
    			stack_bottom12 = #$node_stack_bottom1[2]$
		    	@stack_bottom10 *= 1.6
	    		@stack_bottom11 *= 1.6
		    	@stack_bottom12 *= 1.6
	    		@node_stack_bottom1 = #$stack_bottom10$,$stack_bottom11$,$stack_bottom12$,$node_stack_bottom1[3]$,$node_stack_bottom1[4]$,$node_stack_bottom1[5]$,$node_stack_bottom1[6]$
	    		!stack_bottom10 = DEL
			    !stack_bottom11 = DEL
    			!stack_bottom12 = DEL
	    	}
 	   		@NODES:HAS[#node_stack_bottom2[*]] {
		    	stack_bottom20 = #$node_stack_bottom2[0]$
			    stack_bottom21 = #$node_stack_bottom2[1]$
    			stack_bottom22 = #$node_stack_bottom2[2]$
		    	@stack_bottom20 *= 1.6
	    		@stack_bottom21 *= 1.6
		    	@stack_bottom22 *= 1.6
	    		@node_stack_bottom2 = #$stack_bottom20$,$stack_bottom21$,$stack_bottom22$,$node_stack_bottom2[3]$,$node_stack_bottom2[4]$,$node_stack_bottom2[5]$,$node_stack_bottom2[6]$
	    		!stack_bottom20 = DEL
			    !stack_bottom21 = DEL
    			!stack_bottom22 = DEL
	    	}
	    }
	}
}