//
//LRTR config was taken from two sources:  The stock KerbalismConfig and the RealismOverhaul config created by Standecco
//https://github.com/Kerbalism/Kerbalism
//https://github.com/Standecco/ROKerbalism
//

// ============================================================================
// Liquids in Microgravity
// ============================================================================
@PART[*]:HAS[#capsuleType[BasicCapsule]]:NEEDS[FeatureScience]:FOR[LRTR-Kerbalism]
{
	MODULE
	{
		name = Experiment
		experiment_id = RP0-LiquidsMicrogravity

		ec_rate = #$@KERBALISM_CREW_EXPERIMENTS/RP0-LiquidsMicrogravity/ECCost$
		data_rate = #$@KERBALISM_CREW_EXPERIMENTS/RP0-LiquidsMicrogravity/size$
		@data_rate /= #$@KERBALISM_CREW_EXPERIMENTS/RP0-LiquidsMicrogravity/duration$
		requires = #$@KERBALISM_CREW_EXPERIMENTS/RP0-LiquidsMicrogravity/requirements$
		resources = #$@KERBALISM_CREW_EXPERIMENTS/RP0-LiquidsMicrogravity/ResourceRates$
        
		crew_operate = True
		hide_when_unavailable = True
    }
}

@EXPERIMENT_DEFINITION:HAS[#id[RP0-LiquidsMicrogravity]]:NEEDS[FeatureScience]:FOR[LRTR-Kerbalism]
{
	@baseValue = #$@KERBALISM_CREW_EXPERIMENTS/RP0-LiquidsMicrogravity/value$
	@dataScale = #$@KERBALISM_CREW_EXPERIMENTS/RP0-LiquidsMicrogravity/size$
	@dataScale /= #$baseValue$
	KERBALISM_EXPERIMENT
  	{
   		// sample mass in tons. if undefined or 0, the experiment produce a file
    	SampleMass = #$@KERBALISM_CREW_EXPERIMENTS/RP0-LiquidsMicrogravity/SampleMass$
	    // Body restrictions, multiple lines allowed (just don't use confictiong combinations).
	    BodyAllowed = HomeBody
 	}
}

// ============================================================================
// Visual Tracking
// ============================================================================
@PART[*]:HAS[#capsuleType[BasicCapsule]]:NEEDS[FeatureScience]:FOR[LRTR-Kerbalism]
{
	MODULE
	{
		name = Experiment
		experiment_id = RP0-VisualTracking

		ec_rate = #$@KERBALISM_CREW_EXPERIMENTS/RP0-VisualTracking/ECCost$
		data_rate = #$@KERBALISM_CREW_EXPERIMENTS/RP0-VisualTracking/size$
		@data_rate /= #$@KERBALISM_CREW_EXPERIMENTS/RP0-VisualTracking/duration$
		requires = #$@KERBALISM_CREW_EXPERIMENTS/RP0-VisualTracking/requirements$
		resources = #$@KERBALISM_CREW_EXPERIMENTS/RP0-VisualTracking/ResourceRates$
        
		crew_operate = True
		hide_when_unavailable = True
    }
}

@EXPERIMENT_DEFINITION:HAS[#id[RP0-VisualTracking]]:NEEDS[FeatureScience]:FOR[LRTR-Kerbalism]
{
	@baseValue = #$@KERBALISM_CREW_EXPERIMENTS/RP0-VisualTracking/value$
	@dataScale = #$@KERBALISM_CREW_EXPERIMENTS/RP0-VisualTracking/size$
	@dataScale /= #$baseValue$
	KERBALISM_EXPERIMENT
  	{
   		// sample mass in tons. if undefined or 0, the experiment produce a file
    	SampleMass = #$@KERBALISM_CREW_EXPERIMENTS/RP0-VisualTracking/SampleMass$
	    // Body restrictions, multiple lines allowed (just don't use confictiong combinations).
	    BodyAllowed = HomeBody
 	}
}

// ============================================================================
// Flight Control Experiments
// ============================================================================
@PART[*]:HAS[#capsuleType[BasicCapsule]]:NEEDS[FeatureScience]:FOR[LRTR-Kerbalism]
{
	MODULE
	{
		name = Experiment
		experiment_id = RP0-FlightControl

		ec_rate = #$@KERBALISM_CREW_EXPERIMENTS/RP0-FlightControl/ECCost$
		data_rate = #$@KERBALISM_CREW_EXPERIMENTS/RP0-FlightControl/size$
		@data_rate /= #$@KERBALISM_CREW_EXPERIMENTS/RP0-FlightControl/duration$
		requires = #$@KERBALISM_CREW_EXPERIMENTS/RP0-FlightControl/requirements$
		resources = #$@KERBALISM_CREW_EXPERIMENTS/RP0-FlightControl/ResourceRates$
        
		crew_operate = True
		hide_when_unavailable = True
    }
}

@EXPERIMENT_DEFINITION:HAS[#id[RP0-FlightControl]]:NEEDS[FeatureScience]:FOR[LRTR-Kerbalism]
{
	@baseValue = #$@KERBALISM_CREW_EXPERIMENTS/RP0-FlightControl/value$
	@dataScale = #$@KERBALISM_CREW_EXPERIMENTS/RP0-FlightControl/size$
	@dataScale /= #$baseValue$
	KERBALISM_EXPERIMENT
  	{
   		// sample mass in tons. if undefined or 0, the experiment produce a file
    	SampleMass = #$@KERBALISM_CREW_EXPERIMENTS/RP0-FlightControl/SampleMass$
	    // Body restrictions, multiple lines allowed (just don't use confictiong combinations).
	    BodyAllowed = HomeBody
  	}
}

// ============================================================================
// Earth Photography
// ============================================================================
@PART[*]:HAS[#capsuleType[BasicCapsule]]:NEEDS[FeatureScience]:FOR[LRTR-Kerbalism]
{
	MODULE
	{
		name = Experiment
		experiment_id = RP0-EarthPhotography

		ec_rate = #$@KERBALISM_CREW_EXPERIMENTS/RP0-EarthPhotography/ECCost$
		%sample_amount = 1
		%data_rate = #$@KERBALISM_CREW_EXPERIMENTS/RP0-EarthPhotography/size$
		@data_rate /= #$@KERBALISM_CREW_EXPERIMENTS/RP0-EarthPhotography/duration$
		requires = #$@KERBALISM_CREW_EXPERIMENTS/RP0-EarthPhotography/requirements$
		resources = #$@KERBALISM_CREW_EXPERIMENTS/RP0-EarthPhotography/ResourceRates$
        
		crew_operate = True
		hide_when_unavailable = True
    }
}

@EXPERIMENT_DEFINITION:HAS[#id[RP0-EarthPhotography]]:NEEDS[FeatureScience]:FOR[LRTR-Kerbalism]
{
	@baseValue = #$@KERBALISM_CREW_EXPERIMENTS/RP0-EarthPhotography/value$
	@dataScale = #$@KERBALISM_CREW_EXPERIMENTS/RP0-EarthPhotography/size$
	@dataScale /= #$baseValue$
	KERBALISM_EXPERIMENT
  	{
   		// sample mass in tons. if undefined or 0, the experiment produce a file
    	SampleMass = #$@KERBALISM_CREW_EXPERIMENTS/RP0-EarthPhotography/SampleMass$
	    // Body restrictions, multiple lines allowed (just don't use confictiong combinations).
	    BodyAllowed = HomeBody
  	}
}